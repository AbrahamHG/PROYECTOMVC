@model PROYECTOMVC.Models.Habitaciones

@{
    ViewBag.Title = "Editar Habitación";
}

<div class="container mt-4">
    <h2 class="text-primary">Editar Habitación</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal shadow-sm p-4">
            <h4>Habitaciones</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.ID_Habitacion)

            <!-- Número de Habitación -->
            <div class="form-group row">
                @Html.LabelFor(model => model.Numero_Habitacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Numero_Habitacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Numero_Habitacion, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Tipo -->
            <div class="form-group row">
                @Html.LabelFor(model => model.tipo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tipo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tipo, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Precio -->
            <div class="form-group row">
                @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Estatus -->
            <div class="form-group row">
                @Html.LabelFor(model => model.Estatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="form-check">
                        @Html.EditorFor(model => model.Estatus, new { htmlAttributes = new { @class = "form-check-input" } })
                        @Html.ValidationMessageFor(model => model.Estatus, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- Descripción -->
            <div class="form-group row">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Botón de Submit -->
            <div class="form-group row">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                </div>
            </div>
        </div>
    }

    <!-- Enlace para volver a la lista -->
    <div class="mt-3">
        @Html.ActionLink("Volver a la Lista", "Index", null, new { @class = "btn btn-secondary" })
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
